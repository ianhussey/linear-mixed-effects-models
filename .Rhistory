library(simr)  # power calculations for lme4
library(afex)  # stacks on top of lmer for p values, eta2 etc
library(BayesFactor)
setwd("/Users/Ian/git/linear mixed effects models/")
IAT_data <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second")),
participant = as.factor(participant))
IAT_data_outliers_removed <-
schoRsch::outlier(IAT_data,
dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6
model7 <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE,
multicore = TRUE)
model7
?slice
View(IAT_data_outliers_removed)
View(IAT_data_outliers_removed)
subsample_participants <-
IAT_data %>%
summarize(participant = distinct(participant))
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
summarize(participant = distinct(participant))
?distinct
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant)
View(subsample_participants)
View(subsample_participants)
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:100)
subsample_IAT_data_outliers_removed <-
inner_join(IAT_data, subsample_participants)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
schoRsch::outlier(IAT_data,
dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
subsample_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
schoRsch::outlier(IAT_data,
dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model3b <- afex::mixed(rt ~ block * condition + (1 | participant), # entering participant as a random effect acknowledges the non-independence of the multiple data points for each participant
data = subsample_outliers_removed,
type = 3,  # sum of squares
method = "LR",  # Kenward-Roger method of approximation of df for p values. Parametic bootstrapping ("PB") and liklihood ratio tests ("LR") also available.
progress = TRUE,
return = "mixed")
x <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
schoRsch::outlier(IAT_data,
dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = x,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
View(x)
View(x)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second")))
View(subsample_IAT_data_outliers_removed)
View(subsample_IAT_data_outliers_removed)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants)
IAT_data <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second")),
participant = as.factor(participant)) %>%
filter(participant)
IAT_data_outliers_removed <-
IAT_data %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:100)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6
model6 <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:50)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:30)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:20)
View(subsample_participants)
View(subsample_participants)
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:20)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:10)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:4)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:2)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:20)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model_1 <- lm(rt ~ block * condition,
data = subsample_IAT_data_outliers_removed)
summary(model_1)
Anova(model_1, type="II")
model_2 <- lmer(rt ~ block * condition + (1 | participant), # entering participant as a random effect acknowledges the non-independence of the multiple data points for each participant
data = subsample_IAT_data_outliers_removed)
summary(model_2)
Anova(model_2, type="III")
model3a <- afex::mixed(rt ~ block * condition + (1 | participant), # entering participant as a random effect acknowledges the non-independence of the multiple data points for each participant
data = subsample_IAT_data_outliers_removed,
type = 3,  # sum of squares
method = "KR",  # Kenward-Roger method of approximation of df for p values. Parametic bootstrapping ("PB") and liklihood ratio tests ("LR") also available.
progress = TRUE,
return = "mixed")
summary(model3a)
print(model3a)  # same as using anova() here
model3b <- afex::mixed(rt ~ block * condition + (1 | participant), # entering participant as a random effect acknowledges the non-independence of the multiple data points for each participant
data = subsample_IAT_data_outliers_removed,
type = 3,  # sum of squares
method = "LR",  # Kenward-Roger method of approximation of df for p values. Parametic bootstrapping ("PB") and liklihood ratio tests ("LR") also available.
progress = TRUE,
return = "mixed")
summary(model3b)
print(model3b)  # same as using anova() here
model7_subsample <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE,
multicore = TRUE)
model7_subsample
model7_subsample <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE,
multicore = TRUE)
model7_subsample
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(21:40)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- lmBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
progress = TRUE)
model6_subsample
model7_subsample <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
multicore = TRUE)
model7_subsample
model7_subsample[9]
model7_subsample[9] / model7_subsample[8]
model7_subsample[9] - model7_subsample[8]
model7_subsample[9] / model7_subsample[8]
model7_subsample
model7_subsample[9] / model7_subsample[8]
model6 <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleRandom = "nuisance",  # default
rscaleCont = "medium",  # default
multicore = TRUE)
model6
model6_subsample[9] / model6_subsample[8]
model6[9] / model6[8]
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:50)
model6_subsample <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleCont = "medium",  # default
rscaleRandom = "nuisance",  # default
multicore = TRUE)
model6_subsample
model6_subsample[9] / model6_subsample[8]
model6[9] / model6[8]
subsample_participants <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
distinct(participant) %>%
slice(1:100)
subsample_IAT_data_outliers_removed <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second"))) %>%
inner_join(subsample_participants) %>%
mutate(participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model6_subsample <- generalTestBF(rt ~ block * condition + participant,
whichRandom = "participant",  # random factors
data = subsample_IAT_data_outliers_removed,
rscaleFixed = "medium",  # default
rscaleCont = "medium",  # default
rscaleRandom = "nuisance",  # default
multicore = TRUE)
model6_subsample
model6_subsample[9] / model6_subsample[8]
plot(density(IAT_data$rt), col = "red")
lines(density(IAT_data_outliers_removed$rt), col = "blue")
plot(density(IAT_data_outliers_removed$rt[IAT_data_outliers_removed$condition == "IAT_first" &
IAT_data_outliers_removed$block == "B1C1_block" ]), col = "red")
lines(density(IAT_data_outliers_removed$rt[IAT_data_outliers_removed$condition == "IAT_first" &
IAT_data_outliers_removed$block == "B1C2_block"]), col = "green")
lines(density(IAT_data_outliers_removed$rt[IAT_data_outliers_removed$condition == "IAT_second" &
IAT_data_outliers_removed$block == "B1C1_block"]), col = "blue")
lines(density(IAT_data_outliers_removed$rt[IAT_data_outliers_removed$condition == "IAT_second" &
IAT_data_outliers_removed$block == "B1C2_block"]), col = "magenta")
with(IAT_data_outliers_removed, interaction.plot(block, condition, rt))
library(BayesFactor)
setwd("/Users/Ian/git/linear mixed effects models/")
IAT_data <-
read.csv("long data.csv") %>%
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second")),
participant = as.factor(participant)) %>%
filter(participant)
IAT_data_outliers_removed <-
IAT_data %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
setwd("/Users/Ian/git/linear mixed effects models/")
