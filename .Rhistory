?purrr
data_df <- read.csv("/Users/Ian/Dropbox/Work/Projects/Hussey & Hughes - Derivation study/OSF Derivation study/Piloting/Pilot data - processed but not analysed/Relational Training (MTS - OTM)_raw_16_09_28.csv")
View(data_df)
View(data_df)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
participant)
library(dplyr)
library(tidyverse)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
participant)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
subject)
View(cleaned_df)
View(cleaned_df)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
response,
subject)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject) %>%
group_by(participant) %>%
filter(blocknum == max(blocknum) - 1)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject) %>%
group_by(subject) %>%
filter(blocknum == max(blocknum) - 1)
?rle
?sequence
sequence(rle(as.character(cleaned_df$correct))$n_in_a_row)
rle(as.character(cleaned_df$correct)
rle(as.character(cleaned_df$correct))
x <- rle(as.character(cleaned_df$correct))
x
x <- rle(cleaned_df$correct)
x
x <- as.data.frame(rle(cleaned_df$correct))
x <-
cleaned_df %>%
group_by(subject) %>%
rle(correct)
x <-
cleaned_df %>%
group_by(subject) %>%
summarise(n_in_a_row = rle(correct))
x <-
cleaned_df %>%
group_by(subject) %>%
summarise(n_in_a_row = max(rle(correct)))
data_df <- read.csv("/Users/Ian/Dropbox/Work/Projects/Hussey & Hughes - Derivation study/OSF Derivation study/Piloting/Pilot data - processed but not analysed/Relational Testing (MTS - OTM)_raw_16_09_28.csv")
library(tidyverse)
View(data_df)
View(data_df)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject) %>%
group_by(subject) %>%
mutate(trial = add_rownames)
cleaned_df <-
data_df %>%
select(trialcode,
blocknum,
correct,
latency,
subject) %>%
group_by(subject) %>%
add_rownames()
cleaned_df <-
data_df %>%
select(trialcode,
trialnum,
blocknum,
correct,
latency,
subject) %>%
group_by(subject)
cleaned_df <-
data_df %>%
select(trialcode,
trialnum,
correct,
latency,
subject) %>%
group_by(subject)
?plot
plot(cleaned_df$trialnum, cleaned_df$correct)
plot(cleaned_df$trialnum, cleaned_df$latency)
stroop <-
stroop %>%
mutate(rt_mean = mean(rt),
rt_sd = sd(rt),
rt_high = rt_mean + rt_sd*2,
rt_low = rt_mean - rt_sd*2,
rt_trimmed = ifelse(rt > rt_high, NA,
ifelse(rt < rt_low, NA, rt)),
rt_trimmed_recip = 1/rt_trimmed) %>%
select(-rt_mean,
-rt_sd,
-rt_high,
-rt_low) %>%
filter(!is.na(rt_trimmed))
library(dplyr)
library(ez)
##Stroop Data (Data Set 1)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_stroop.csv")
stroop <- read.csv2(filename, header=TRUE, dec=".")
stroop$cond <- as.numeric(stroop$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(stroop[stroop$ID == stroop$ID[1], 1])
nsub <- length(unique(stroop$ID))
stroop$trial <- rep(1:ntrial, nsub)
stroop$rt <- stroop$RT/1000 #rt data in seconds
stroop <- subset(stroop, accuracy == 1 & cond != 3)
#trimming
#stroop <- stroop[stroop$rt > .2 & stroop$rt < 2, ]
stroop <-
stroop %>%
mutate(rt_mean = mean(rt),
rt_sd = sd(rt),
rt_high = rt_mean + rt_sd*2,
rt_low = rt_mean - rt_sd*2,
rt_trimmed = ifelse(rt > rt_high, NA,
ifelse(rt < rt_low, NA, rt)),
rt_trimmed_recip = 1/rt_trimmed) %>%
select(-rt_mean,
-rt_sd,
-rt_high,
-rt_low) %>%
filter(!is.na(rt_trimmed))
library(curl) ##You will need to load the R package "curl" to use this cleaning code
library(lme4)
library(car)
library(dplyr)
library(ez)
##Stroop Data (Data Set 1)
filename <- curl("https://raw.githubusercontent.com/PerceptionCognitionLab/data0/master/contexteffects/FlankerStroopSimon/LEF_stroop.csv")
stroop <- read.csv2(filename, header=TRUE, dec=".")
stroop$cond <- as.numeric(stroop$congruency)  #congruent -> 1, incongruent -> 2, neutral -> 3
ntrial <- length(stroop[stroop$ID == stroop$ID[1], 1])
nsub <- length(unique(stroop$ID))
stroop$trial <- rep(1:ntrial, nsub)
stroop$rt <- stroop$RT/1000 #rt data in seconds
stroop <- subset(stroop, accuracy == 1 & cond != 3)
#trimming
#stroop <- stroop[stroop$rt > .2 & stroop$rt < 2, ]
stroop <-
stroop %>%
mutate(rt_mean = mean(rt),
rt_sd = sd(rt),
rt_high = rt_mean + rt_sd*2,
rt_low = rt_mean - rt_sd*2,
rt_trimmed = ifelse(rt > rt_high, NA,
ifelse(rt < rt_low, NA, rt)),
rt_trimmed_recip = 1/rt_trimmed) %>%
select(-rt_mean,
-rt_sd,
-rt_high,
-rt_low) %>%
filter(!is.na(rt_trimmed))
plot(density(stroop$rt_trimmed[stroop$congruency == "congruent"]))
lines(density(stroop$rt_trimmed[stroop$congruency == "incongruent"]))
plot(density(stroop$rt_trimmed_recip[stroop$congruency == "congruent"]))
lines(density(stroop$rt_trimmed_recip[stroop$congruency == "incongruent"]))
t <- t.test(rt_trimmed_recip ~ congruency,
data = stroop)
t
t <- t.test(rt_trimmed ~ congruency,
data = stroop)
t
library(plyr) #must import before dplyr
library(ggplot2)
library(gridExtra)
set.seed(10005)
xvar <- c(rnorm(1500, mean = -1), rnorm(1500, mean = 1.5))
yvar <- c(rnorm(1500, mean = 1), rnorm(1500, mean = 1.5))
zvar <- as.factor(c(rep(1, 1500), rep(2, 1500)))
xy <- data.frame(xvar, yvar, zvar)
p1<-ggplot(xy, aes(xvar)) + geom_density()
p2<-ggplot(xy, aes(x=xvar)) +
geom_histogram(aes(y = ..density..), color="black", fill=NA) +
geom_density(color="blue")
p3<-ggplot(xy, aes(xvar, fill = zvar)) + geom_density(alpha = 0.2)
grid.arrange(p1, p2, p3, nrow=1)
p2<-ggplot(xy, aes(x=xvar)) +
geom_histogram(aes(y = ..density..), color="black", fill=NA) +
geom_density(color="blue")
o
plot_1 <- ggplot(xy, aes(xvar, fill = zvar)) + geom_density(alpha = 0.2)
grid.arrange(plot_1, plot_1, plot_1, nrow=1)
data <- read.csv(file = "~/Desktop/NCSU workshop/raw_data.csv", header = TRUE)
data <- read.csv(file = "/Users/Ian/Dropbox/Work/Projects/COS seminar/clean_data.csv", header = TRUE)
data[data < 0] <- NA
View(data)
View(data)
data <- data[c(-15)]
clean_data.csv <- write.csv(data, file = "clean_data.csv", row.names = FALSE)
library(pim)
?`pim-package`
citation("pim")
library(shiny)
runApp("Implicit_app")
library(shiny)
runApp("Implicit_app")
install.packages("lubridate")
library(lubridate)
df <- read.csv("~/Desktop/dates.csv")
View(df)
View(df)
library(tidyverse)
View(df)
View(df)
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born))
View(df_2)
View(df_2)
library(tidyverse)
library(lubridate)
df <- read.csv("~/Desktop/dates.csv")
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born))
?warnings
df_2 <-
df %>%
mutate(dmy(age) = dmy(entered) - dmy(born))
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born))
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born) / 365)
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born))
library(tidyverse)
library(lubridate)
df <- read.csv("~/Desktop/dates.csv")
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born))
dmy(df_2$age)
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born),
age = age/365)
df_2 <-
df %>%
mutate(age = dmy(entered) - dmy(born),
age = round(age/365, 2))
df_2 <-
df %>%
mutate(age = round(dmy(entered) - dmy(born), 2))
df_2 <-
df %>%
mutate(age = round((dmy(entered) - dmy(born))/365, 2))
df_2 <-
df %>%
mutate(age = round((dmy(entered) - dmy(born))/365, 2),
stay = round((dmy(left) - dmy(entered))/365, 2))
plot(df_2$stay, df_2$age)
plot(df_2$stay, df_2$age,
xlab="stay", ylab="age", pch=19)
plot(df_2$stay, df_2$age,
xlab="stay", ylab="age")
abline(lm(stay~age))
raw_data <- read.csv("~/Desktop/dates.csv")
processed_data <-
raw_data %>%
mutate(age = round((dmy(entered) - dmy(born))/365, 2),
stay = round((dmy(left) - dmy(entered))/365, 2))
attach(processed_data)
density(stay)
library(tidyverse)
library(lubridate)
raw_data <- read.csv("~/Desktop/dates.csv")
processed_data <-
raw_data %>%
mutate(age = round((dmy(entered) - dmy(born))/365, 2),
stay = round((dmy(left) - dmy(entered))/365, 2))
attach(processed_data)
density(stay)
density(age)
library(tidyverse)
library(lubridate)
raw_data <- read.csv("~/Desktop/dates.csv")
processed_data <-
raw_data %>%
mutate(age = round((dmy(entered) - dmy(born))/365, 2),
stay = round((dmy(left) - dmy(entered))/365, 2))
attach(processed_data)
density(stay)
View(processed_data)
View(processed_data)
density(age)
plot(stay,
age,
xlab="stay",
ylab="age")
abline(lm(stay~age))
plot(stay,
age,
xlab="stay",
ylab="age",
abline(lm(stay~age)))
plot(stay,
age,
xlab="stay",
ylab="age",
abline(lm(age~stay)))
density(stay)
processed_data <-
raw_data %>%
mutate(age = as.numeric(round((dmy(entered) - dmy(born))/365, 2)),
stay = as.numeric(round((dmy(left) - dmy(entered))/365, 2)))
attach(processed_data)
processed_data <-
raw_data %>%
mutate(age = as.numeric(round((dmy(entered) - dmy(born))/365, 2)),
stay = as.numeric(round((dmy(left) - dmy(entered))/365, 2)))
attach(processed_data)
density(stay)
density(age)
plot(stay,
age,
xlab="stay",
ylab="age",
abline(lm(age~stay)))
density(processed_data$stay)
density(processed_data$age)
library(ez)
library(dplyr)
library(car)
library(schoRsch)
library(afex)  # stacks on top of lmer for p values, eta2 etc
library(BayesFactor)
library(simr) # for power calculations via powerSim
setwd("/Users/Ian/git/linear mixed effects models/")
IAT_data <-
read.csv("long data.csv") %>%
filter(rt > 0) %>%  # log transformations require rts of 0 to be removed.
mutate(block = ifelse(block == 1, "B1C1_block", "B1C2_block"),
condition = as.factor(ifelse(condition == 1, "IAT_first", "IAT_second")),
participant = as.factor(participant),
log_rt = log(rt))
IAT_data_outliers_removed <-
IAT_data %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5) %>%
schoRsch::outlier(dv = "log_rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
model_1 <- afex::mixed(log_rt ~ block * condition * trial_n + (1 | participant), # entering participant as a random effect acknowledges the non-independence of the multiple data points for each participant
data = IAT_data_outliers_removed,
type = 3,  # sum of squares
method = "KR",  # Kenward-Roger method of approximation of df for p values. Parametic bootstrapping ("PB") and liklihood ratio tests ("LR") also available.
progress = TRUE,
return = "mixed")
summary(model_1)
print(model_1)  # same as using anova() here
setwd("/Users/Ian/Downloads/bl ne/")
files <-
list.files()
files
files <-
list.files() %>%
filter(grepl("100_"))
files <-
as.data.frame(list.files())
View(files)
View(files)
files <-
as.data.frame(list.files()) %>%
filter(grepl("100_"))
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
filter(grepl("100_"))
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
filter(file == grepl("100_"))
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
filter(grepl("100_"), file)
library(dplyr)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
filter(grepl("100_"), file)
?filter
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_"), file)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file))
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file)) %>%
write.csv(row.numbers = FALSE)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file)) %>%
write.csv("suitable.csv", row.numbers = FALSE)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file)) %>%
write.csv("suitable.csv", row.numbers == FALSE)
?write.csv
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file)) %>%
write.csv("suitable.csv", row.names = FALSE)
setwd("/Users/Ian/Downloads/cau ne/")
library(dplyr)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("100_", file)) %>%
write.csv("suitable.csv", row.names = FALSE)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("_00F", file))
setwd("/Users/Ian/Desktop/white/")
library(dplyr)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("_00F", file))
View(files)
View(files)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("1100_00F", file))
View(files)
View(files)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("1100_00F", file)) %>%
write.csv("suitable.csv", row.names = FALSE)
setwd("/Users/Ian/Desktop/black/")
library(dplyr)
files <-
as.data.frame(list.files()) %>%
rename(file = `list.files()`) %>%
dplyr::filter(grepl("1100_00F", file)) %>%
write.csv("suitable.csv", row.names = FALSE)
load(model_3, file = "model_3_pim.RData")
setwd("/Users/Ian/git/linear mixed effects models/")
load(model_3, file = "model_3_pim.RData")
load(model_3, file = "model_3_pim")
load(model_3, file = "model_3_pim")
load(model_3, file = "model_3_pim.RData")
summary(model_3)
